import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import calendar
import seaborn as sns
import os

print('‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶ –î–ò–ù–ê–ú–ò–ö–ê –ü–†–û–î–ê–ñ –ü–û –ü–ï–†–ò–û–î–ê–ú ‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶‚ô¶')

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
output_folder = "charts"
os.makedirs(output_folder, exist_ok=True)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç—ã
print("üíæ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç—ã...")
OUTLETS = pd.read_csv('outlets.csv', delimiter=';', dtype=str)
SELLOUT = pd.read_csv('SELLOUT_TIME.csv', delimiter=';', dtype=str)
PRODUCTS = pd.read_csv('Products.csv', delimiter=',', dtype=str, names=['index', 'product_id', 'product_name', 'subsegment', 'brand'], header=0)

# –£–¥–∞–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É 'index'
if 'index' in PRODUCTS.columns:
    PRODUCTS.drop(columns=['index'], inplace=True)

# –ü—Ä–∏–≤–æ–¥–∏–º product_id –≤ PRODUCTS –∫ —Å—Ç—Ä–æ–∫–µ (—É–±–∏—Ä–∞–µ–º .0)
PRODUCTS['product_id'] = PRODUCTS['product_id'].str.replace(r'\.0$', '', regex=True)

# –ü—Ä–∏–≤–æ–¥–∏–º sell_date –∫ —Ñ–æ—Ä–º–∞—Ç—É –¥–∞—Ç—ã
SELLOUT['sell_date'] = pd.to_datetime(SELLOUT['sell_date'], format='%Y-%m-%d')

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É —Å –º–µ—Å—è—Ü–µ–º
SELLOUT['month'] = SELLOUT['sell_date'].dt.month

# –ü—Ä–∏–≤–æ–¥–∏–º cnt –∫ —á–∏—Å–ª—É
SELLOUT['cnt'] = pd.to_numeric(SELLOUT['cnt'], errors='coerce').fillna(0).astype(int)

# üîó –û–±—ä–µ–¥–∏–Ω—è–µ–º SELLOUT –∏ PRODUCTS
SELLOUT = SELLOUT.merge(PRODUCTS, on='product_id', how='left')

# –ó–∞–º–µ–Ω—è–µ–º NaN
SELLOUT['product_name'].fillna('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç', inplace=True)
SELLOUT['brand'].fillna('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–µ–Ω–¥', inplace=True)

# üìä –ê–≥—Ä–µ–≥–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂–∏ –ø–æ –º–µ—Å—è—Ü–∞–º
monthly_sales = SELLOUT.groupby('month')['cnt'].sum().reset_index()
monthly_sales['month'] = monthly_sales['month'].apply(lambda x: calendar.month_abbr[x])

# üî• –ì—Ä–∞—Ñ–∏–∫ –¥–∏–Ω–∞–º–∏–∫–∏ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º
plt.figure(figsize=(12, 5))
sns.lineplot(x=monthly_sales['month'], y=monthly_sales['cnt'], marker='o')
plt.xlabel('–ú–µ—Å—è—Ü')
plt.ylabel('–ü—Ä–æ–¥–∞–∂–∏')
plt.title('–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º')
plt.xticks(rotation=45)
plt.grid()
plt.savefig(os.path.join(output_folder, "monthly_sales.png"))
plt.show()

# üî• –ê–Ω–∞–ª–∏–∑ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º (–≥—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ `product_name`)
product_sales = SELLOUT.groupby(['product_name', 'month'])['cnt'].sum().unstack().fillna(0)

# üî• –¢–û–ü-10 –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å —Å–∞–º—ã–º–∏ –ø–∏–∫–æ–≤—ã–º–∏ –ø—Ä–æ–¥–∞–∂–∞–º–∏
top_products = product_sales.sum(axis=1).nlargest(10).index

# üìä –ì—Ä–∞—Ñ–∏–∫–∏ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è —Ç–æ–ø-10 –ø—Ä–æ–¥—É–∫—Ç–æ–≤
fig, axes = plt.subplots(nrows=5, ncols=2, figsize=(12, 12))
axes = axes.flatten()
colors = sns.color_palette("husl", len(top_products))

for i, (product, color) in enumerate(zip(top_products, colors)):
    axes[i].plot(product_sales.columns, product_sales.loc[product], marker='o', linestyle='-', color=color)
    axes[i].set_title(f'{product}')
    axes[i].set_xlabel('–ú–µ—Å—è—Ü')
    axes[i].set_ylabel('–ü—Ä–æ–¥–∞–∂–∏')
    axes[i].grid()
    axes[i].set_xticks(product_sales.columns)
    axes[i].set_xticklabels([calendar.month_abbr[m] for m in product_sales.columns], rotation=45)

plt.tight_layout()
plt.savefig(os.path.join(output_folder, "top_10_products_seasonality.png"))
plt.show()

# üî• –†–∞–∑–¥–µ–ª—è–µ–º –≥—Ä–∞—Ñ–∏–∫–∏ —Å–µ–∑–æ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ –≥—Ä—É–ø–ø—ã –ø–æ 10 –ø—Ä–æ–¥—É–∫—Ç–æ–≤
num_products = len(product_sales)
products_per_plot = 10
num_plots = int(np.ceil(num_products / products_per_plot))
colors = sns.color_palette("husl", products_per_plot)

for i in range(num_plots):
    subset = product_sales.iloc[i * products_per_plot:(i + 1) * products_per_plot]
    num_subplots = len(subset)
    rows = (num_subplots // 2) + (num_subplots % 2)
    fig, axes = plt.subplots(nrows=rows, ncols=2, figsize=(12, rows * 3))
    axes = axes.flatten()

    for j, (product, color) in enumerate(zip(subset.index, colors[:num_subplots])):
        axes[j].plot(subset.columns, subset.loc[product], marker='o', linestyle='-', color=color)
        axes[j].set_title(f'{product}')
        axes[j].set_xlabel('–ú–µ—Å—è—Ü')
        axes[j].set_ylabel('–ü—Ä–æ–¥–∞–∂–∏')
        axes[j].grid()
        axes[j].set_xticks(subset.columns)
        axes[j].set_xticklabels([calendar.month_abbr[m] for m in subset.columns], rotation=45)

    plt.tight_layout()
    plt.savefig(os.path.join(output_folder, f"products_seasonality_part_{i + 1}.png"))
    plt.show()
